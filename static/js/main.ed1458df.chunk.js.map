{"version":3,"sources":["DraftEditor/toolbarStyles.module.scss","SwitchButton/SwitchButton.jsx","utils/regex.js","utils/slateUtils.js","utils/index.js","SlateEditor/Button/Button.jsx","SlateEditor/Button/ImageButton.jsx","SlateEditor/Button/LinkButton.jsx","SlateEditor/InlineToolbar.jsx","SlateEditor/Toolbar.jsx","SlateEditor/EmojiDropdown/EmojiDropdown.jsx","SlateEditor/Element/ImageElement/ImageElement.jsx","SlateEditor/Element/Element.jsx","SlateEditor/Leaf/Leaf.jsx","SlateEditor/Editor.jsx","SlateEditor/handleKeyDown.js","actions/index.js","DraftEditor/plugins.js","DraftEditor/Toolbar.jsx","DraftEditor/decorator.js","DraftEditor/StyleControls/StyleButton.jsx","DraftEditor/StyleControls/BlockStyleControls.jsx","DraftEditor/StyleControls/InlineStyleControls.jsx","DraftEditor/Editor.jsx","reducers/editorReducer.js","middleware/socketMiddleware.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","SwitchButton","onToggle","onUntoggle","isToggled","classList","activeClassList","useState","toggled","setToggled","className","classNames","active","onClick","defaultProps","HASHTAG_REGEX","LAST_EMOJI_REGEX","BEFORE_EMOJI_REGEX","LIST_TYPES","HOTKEYS","isBlockActive","editor","format","Editor","nodes","match","node","type","toggleBlock","isActive","isList","includes","Transforms","unwrapNodes","n","split","setNodes","block","children","wrapNodes","getCurrentWord","range","punctuation","wordBefore","before","unit","beforeRange","beforeText","string","charAt","text","getTokenLength","token","length","content","reduce","l","t","insertEmoji","emojiKey","selection","emojis","emoji","select","insertNodes","move","isMarkActive","marks","toggleMark","removeMark","addMark","isLinkActive","wrapLink","url","link","insertImage","image","isImageUrl","isUrl","ext","URL","pathname","pop","imageExtensions","Button","React","memo","prevProps","nextProps","handleSubmit","inputRef","useRef","urlValue","setUrlValue","showURLInput","setShowURLInput","isValid","setIsValid","useEffect","current","focus","ref","value","placeholder","onKeyDown","e","key","preventDefault","onChange","target","onBlur","onMouseDown","linkify","linkifyIt","LinkButton","forwardRef","handleCloseInput","handleClick","buttonClassList","showInput","handleChange","test","InlineToolbar","useSlate","showUrlInput","setShowUrlInput","element","Range","isCollapsed","rect","window","getSelection","getRangeAt","getBoundingClientRect","style","opacity","top","pageYOffset","offsetHeight","left","pageXOffset","offsetWidth","width","removeAttribute","createPortal","event","unwrapLink","document","body","Toolbar","search","results","index","el","ReactEditor","toDOMRange","map","i","description","ImageElement","attributes","selected","useSelected","focused","useFocused","contentEditable","alt","src","props","href","isEqual","leaf","leafChildren","bold","code","italic","underlined","hashtag","deselect","SlateEditor","readOnly","useMemo","isInline","isVoid","insertText","edges","start","emojiMatch","exec","withEmojis","insertData","data","getData","withAnchors","files","file","reader","FileReader","addEventListener","result","readAsDataURL","withImages","withHistory","withReact","createEditor","setTarget","emojiIndex","setEmojiIndex","setSearch","useCallback","Object","entries","filter","toLowerCase","slice","editorValue","setEditorValue","prevIndex","nextIndex","decorate","path","ranges","Node","tokens","Prism","tokenize","languages","javascript","end","push","anchor","offset","Text","isText","forEach","lastIndex","regExp","execAll","renderElement","Element","renderLeaf","autoFocus","hotkey","mark","isHotkey","shiftKey","handleKeyDown","setEditorState","editorState","dispatch","getState","currentContent","editorReducer","getCurrentContent","newContent","equals","payload","convertToRaw","setEditorStateSuccess","plugins","createPrismPlugin","prism","decorator","strategy","contentBlock","callback","links","getText","component","state","regex","matchArr","findWithRegex","StyleButton","label","BLOCK_TYPES","BlockStyleControls","blockType","getBlockForKey","getStartKey","getType","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","linkPlugin","createLinkPlugin","inlineToolbarPlugin","createInlineToolbarPlugin","theme","toolbarStyles","DraftEditor","useSelector","useDispatch","editorRef","toggleInlineStyle","RichUtils","host","tabIndex","role","toggleBlockType","console","log","decorators","newEditorState","merge","language","newBlock","newContentState","blockMap","getBlockMap","set","selectionAfter","EditorState","keyBindingFn","keyCode","getDefaultKeyBinding","blockStyleFn","handleKeyCommand","command","newState","insertSoftNewline","currentState","newBlockState","Modifier","replaceText","externalProps","button","initialState","createEmpty","action","createWithContent","socketMiddleware","socket","store","next","close","socketIOClient","on","convertFromRaw","JSON","parse","message","send","stringify","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","applyMiddleware","thunk","createStore","combineReducers","configureStore","App","setReadOnly","activeClassName","to","exact","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed1458df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"toolbarStyles_toolbar__RnBsD\"};","// @flow\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './SwitchButton.scss';\n\ntype Props = {\n  onToggle: Function,\n  onUntoggle: Function,\n  isToggled?: boolean,\n  classList?: string | Array<string>,\n  activeClassList?: string | Array<string>\n};\n\nconst SwitchButton = ({ \n  onToggle, \n  onUntoggle, \n  isToggled,\n  classList,\n  activeClassList \n}: Props) => {\n  const [toggled, setToggled] = useState(isToggled);\n  \n  const handleClick = () => {\n    if (toggled) onUntoggle();\n    else onToggle();\n    setToggled(!toggled);\n  };\n\n  return (\n    <div className=\"switch-container\">\n      <div \n        className={classNames(\"btn-switch\", classList, toggled && activeClassList, {\n          active: toggled\n        })}\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n\nSwitchButton.defaultProps = {\n  isToggled: false,\n  classList: null,\n  activeClassList: null\n};\n\nexport default SwitchButton;","export const LINK_REGEX = /(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?/g;\nexport const HASHTAG_REGEX = /\\B(#[A-Z0-9a-zÀ-ÖØ-öø-ÿ]+)/g;\nexport const LAST_EMOJI_REGEX = /\\B:([\\w_]+):/;\nexport const BEFORE_EMOJI_REGEX = /\\B:([\\w_]+)/;","import { Editor, Transforms, Range } from 'slate';\nimport { LAST_EMOJI_REGEX } from 'utils/regex';\nimport imageExtensions from 'image-extensions';\nimport isUrl from 'is-url';\nimport emojis from 'utils/emojis';\n\nexport const TEXT_FORMATS = ['bold', 'italic', 'underlined', 'code'];\nconst LIST_TYPES = ['numbered-list', 'bulleted-list'];\nexport const BLOCK_FORMATS = [\n  ...LIST_TYPES,\n  'heading-one',\n  'heading-two',\n  'block-quote',\n  'code-block'\n];\n\nexport const HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underlined',\n  'mod+`': 'code'\n};\n\nexport const isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: (node) => node.type === format\n  });\n\n  return !!match;\n};\n\nexport const toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) => LIST_TYPES.includes(n.type),\n    split: true\n  });\n\n  Transforms.setNodes(editor, {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format\n  });\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nexport const isFormatActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: (n) => n[format] === true,\n    mode: 'all'\n  });\n  return !!match;\n};\n\nexport const getCurrentWord = (editor, range, punctuation = '_') => {\n  const wordBefore = Editor.before(editor, range, { unit: 'word' });\n  const before = wordBefore && Editor.before(editor, wordBefore);\n  const beforeRange = before && Editor.range(editor, before, range);\n  const beforeText = beforeRange && Editor.string(editor, beforeRange);\n  return beforeText?.charAt(0) === punctuation ? getCurrentWord(editor, beforeRange) : { text: beforeText, range: beforeRange };\n}\n\nexport const withEmojis = (editor) => {\n  const { isInline, isVoid, insertText } = editor;\n  editor.isInline = (element) => element.type === 'emoji' ? true : isInline(element);\n  editor.isVoid = (element) => element.type === 'emoji' ? true : isVoid(element);\n  editor.insertText = (text) => {\n    const { selection } = editor;\n    if (selection && Range.isCollapsed(selection)) {\n      const [start] = Range.edges(selection);\n      const wordBefore = getCurrentWord(editor, start);\n      const emojiMatch = LAST_EMOJI_REGEX.exec(wordBefore.text);\n      if (emojiMatch) insertEmoji(editor, emojiMatch[1]);\n    }\n    insertText(text);\n  }\n  return editor;\n}\n\nexport const getTokenLength = (token) => {\n  if (typeof token === 'string') return token.length;\n  else if (typeof token.content === 'string') return token.content.length;\n  else return token.content.reduce((l, t) => l + getTokenLength(t), 0);\n};\n\nexport const insertEmoji = (editor, emojiKey, selection) => {\n  if (emojis[emojiKey]) {\n    const { emoji } = emojis[emojiKey];\n    const node = { type: 'emoji', emoji, children: [{ text: emojiKey }] };\n    Transforms.select(editor, selection);\n    Transforms.insertNodes(editor, node);\n    Transforms.move(editor);\n  }\n}\n\nexport const isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nexport const toggleMark = (editor, format) => {\n  if (isMarkActive(editor, format)) Editor.removeMark(editor, format);\n  else Editor.addMark(editor, format, true);\n};\n\nexport const isLinkActive = (editor) => {\n  const [link] = Editor.nodes(editor, { match: (n) => n.type === 'anchor' });\n  return !!link;\n};\n\nexport const unwrapLink = (editor) => {\n  Transforms.unwrapNodes(editor, { match: (n) => n.type === 'anchor' });\n};\n\nexport const wrapLink = (editor, url) => {\n  const link = {\n    type: 'anchor',\n    url,\n    children: []\n  };\n  Transforms.wrapNodes(editor, link, { split: true });\n};\n\nexport const insertImage = (editor, url) => {\n  const text = { text: '' };\n  const image = { type: 'image', url, children: [text] };\n  Transforms.insertNodes(editor, image);\n};\n\nexport const isImageUrl = url => {\n  if (!url) return false;\n  if (!isUrl(url)) return false;\n  const ext = new URL(url).pathname.split('.').pop();\n  return imageExtensions.includes(ext);\n};\n\nexport const withAnchors = (editor) => {\n  const { insertData, insertText, isInline } = editor;\n\n  editor.isInline = (element) => element.type === 'anchor' ? true : isInline(element);\n\n  editor.insertText = (text) => {\n    if (text && isUrl(text)) wrapLink(editor, text);\n    else insertText(text);\n  };\n\n  editor.insertData = (data) => {\n    const text = data.getData('text/plain');\n    if (text && isUrl(text)) wrapLink(editor, text);\n    else insertData(data);\n  };\n\n  return editor;\n}\n\nexport const withImages = (editor) => {\n  const { insertData, isVoid } = editor;\n\n  editor.isVoid = (element) => element.type === 'image' ? true : isVoid(element);\n\n  editor.insertData = (data) => {\n    const text = data.getData('text/plain');\n    const { files } = data;\n\n    if (text && isUrl(text)) wrapLink(editor, text);\n\n    if (files && files.length > 0)\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n        if (mime === 'image') {\n          reader.addEventListener('load', () => {\n            const url = reader.result\n            insertImage(editor, url)\n          });\n          reader.readAsDataURL(file);\n        }\n      }\n    else if (isImageUrl(text)) insertImage(editor, text);\n    else insertData(data);\n  }\n  return editor;\n}\n\nexport const insertMention = (editor, character) => {\n  const mention = { type: 'mention', character, children: [{ text: '' }] }\n  Transforms.insertNodes(editor, mention)\n  Transforms.move(editor)\n}\n","export function debounce(fn, time) {\n  let timeout;\n\n  return () => {\n    const functionCall = () => fn.apply(this, arguments);\n\n    clearTimeout(timeout);\n    timeout = setTimeout(functionCall, time);\n  };\n}\n\nexport const execAll = (text, regExp) => {\n  const result = [];\n  let match;\n  while ((match = regExp.exec(text)) !== null)\n    result.push({\n      ...match,\n      lastIndex: regExp.lastIndex\n    });\n  return result;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Button.scss';\n\ntype Props = {\n  children: React$Element<any>,\n  classList: string | Array<string>,\n  onClick: Function\n};\n\nconst Button = React.memo(({ children, classList, onClick }: Props) => (\n  <button\n    className={classNames('btn', classList)}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n), (prevProps, nextProps) => prevProps.classList === nextProps.classList);\n\nexport default Button;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { IoMdClose } from 'react-icons/io';\nimport { isImageUrl } from 'utils/slateUtils';\nimport classNames from 'classnames';\nimport './Button.scss';\nimport './ImageButton.scss';\n\ntype Props = {\n  handleSubmit: (value: string) => void,\n  children: React$Element<any>\n};\n\nconst ImageButton = ({ children, handleSubmit }: Props) => {\n  const inputRef = useRef(null);\n  const [urlValue, setUrlValue] = useState('');\n  const [showURLInput, setShowURLInput] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(() => {\n    if (showURLInput) {\n      inputRef.current.focus();\n      setIsValid(true);\n    }\n  }, [showURLInput]);\n\n  return (\n    <div className=\"btn-image\">\n      <div className={classNames('image-input-section align-items-center flex-row', { 'd-flex': showURLInput, 'd-none': !showURLInput})}>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          className={classNames(\"form-control\", { 'invalid': !isValid })}\n          value={urlValue}\n          placeholder=\"Ex.: imgur.com/abc.jpg\"\n          onKeyDown={(e) => {\n            const { key } = e;\n            if (key === 'Enter') {\n              e.preventDefault();\n              if (isImageUrl(urlValue)) {\n                handleSubmit(urlValue);\n                setShowURLInput(false);\n              } else { \n                setIsValid(false);\n              }\n            }\n          }}\n          onChange={(e) => setUrlValue(e.target.value)}\n          onBlur={(e) => setShowURLInput(false)}\n        />\n        <button \n          onMouseDown={(e) => {\n            e.preventDefault();\n            setShowURLInput(false);\n          }} \n          className=\"btn btn-link btn-close\"\n        >\n          <IoMdClose />\n        </button>\n      </div>\n      <button\n        className={classNames('btn btn-link btn-anchor', {\n          'd-inline-block': !showURLInput,\n          'd-none': showURLInput\n        })}\n        onMouseDown={(e) => setShowURLInput(true)}\n      >\n        {children}\n      </button>\n    </div>\n  );\n};\n\nexport default React.memo(ImageButton);\n","import React from 'react';\nimport { IoMdClose } from 'react-icons/io';\nimport linkifyIt from 'linkify-it';\nimport classNames from 'classnames';\nimport './Button.scss';\nimport './LinkButton.scss';\n\ntype Props = {\n  children: React$Element<any>,\n  handleSubmit: (value: string) => void,\n  handleClick: () => void,\n  handleCloseInput: () => void,\n  buttonClassList: string | Array<string>,\n  showInput: boolean\n};\n\nconst linkify = linkifyIt();\n\nconst LinkButton = React.forwardRef(({ \n  children,\n  handleSubmit,\n  handleCloseInput,\n  handleClick,\n  buttonClassList,\n  showInput,\n  value,\n  handleChange\n}: Props, ref) => (\n  <>\n    <div className={classNames('anchor-input-section', showInput ? 'visible' : 'invisible')}>\n      <input\n        ref={ref}\n        type=\"text\"\n        className={classNames(\"form-control\", { 'invalid': !linkify.test(value) })}\n        value={value}\n        placeholder=\"Ex.: www.google.com\"\n        onKeyDown={(e) => {\n          const { key } = e;\n          if (key === 'Enter') {\n            e.preventDefault();\n            if (linkify.test(value)) {\n              handleSubmit();\n              handleCloseInput();\n            }\n          }\n        }}\n        onChange={(e) => handleChange(e.target.value)}\n        onBlur={handleCloseInput}\n      />\n      <button \n        onMouseDown={handleCloseInput} \n        className=\"btn btn-link btn-close\"\n      >\n        <IoMdClose />\n      </button>\n    </div>\n    <button\n      className={classNames('btn btn-link btn-anchor', \n      showInput ? 'invisible' : 'visible', \n      buttonClassList)}\n      onMouseDown={handleClick}\n    >\n      {children}\n    </button>\n  </>\n));\n\nLinkButton.defaultProps = {\n  showInput: false\n};\n\nconst areEqual = (prevProps, nextProps) => (\n  prevProps.showInput === nextProps.showInput\n  || prevProps.classList === nextProps.classList\n  || prevProps.urlValue === nextProps.urlValue\n);\n\nexport default React.memo(LinkButton, areEqual);\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useSlate } from 'slate-react';\nimport classNames from 'classnames';\nimport { Editor, Range } from 'slate';\nimport { FaBold, FaItalic, FaUnderline, FaCode, FaLink } from 'react-icons/fa';\nimport { createPortal } from 'react-dom';\nimport { \n  isMarkActive,\n  isLinkActive,\n  toggleMark, \n  wrapLink, \n  unwrapLink \n} from 'utils/slateUtils'\nimport { Button, LinkButton } from './Button';\nimport './InlineToolbar.scss';\n\nconst InlineToolbar = () => {\n  const ref = useRef();\n  const inputRef = useRef(null);\n  const editor = useSlate();\n  const { selection } = editor;\n  const [urlValue, setUrlValue] = useState('');\n  const [showUrlInput, setShowUrlInput] = useState(false);\n\n  useEffect(() => {\n    if (showUrlInput) {\n      inputRef.current.focus();\n    }\n  }, [showUrlInput]);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return undefined;\n    if (\n      !selection ||\n      Range.isCollapsed(selection) ||\n      Editor.string(editor, selection) === ''\n    ) {\n      element.removeAttribute('style');\n      return undefined;\n    }\n    const domSelection = window.getSelection();\n    const domRange = domSelection.getRangeAt(0);\n    const rect = domRange.getBoundingClientRect();\n    element.style.opacity = 1;\n    element.style.top = `${rect.top +\n      window.pageYOffset -\n      element.offsetHeight}px`;\n    element.style.left = `${rect.left +\n      window.pageXOffset -\n      element.offsetWidth / 2 +\n      rect.width / 2}px`;\n  }, [selection, editor]);\n\n  return createPortal(\n    <div ref={ref} className=\"inline-toolbar-slate\">\n      <Button \n        onClick={(event) => {\n        event.preventDefault();\n          toggleMark(editor, \"bold\");\n        }}\n        classList={classNames('btn-link', {\n          active: isMarkActive(editor, \"bold\")\n        })}\n      >\n        <FaBold />\n      </Button>\n      <Button \n        onClick={(event) => {\n        event.preventDefault();\n          toggleMark(editor, \"italic\");\n        }}\n        classList={classNames('btn-link', {\n          active: isMarkActive(editor, \"italic\")\n        })}\n      >\n        <FaItalic />\n      </Button>\n      <Button \n        onClick={(event) => {\n        event.preventDefault();\n          toggleMark(editor, \"underlined\");\n        }}\n        classList={classNames('btn-link', {\n          active: isMarkActive(editor, \"underlined\")\n        })}\n      >\n        <FaUnderline />\n      </Button>\n      <Button \n        onClick={(event) => {\n        event.preventDefault();\n          toggleMark(editor, \"code\");\n        }}\n        classList={classNames('btn-link', {\n          active: isMarkActive(editor, \"code\")\n        })}\n      >\n        <FaCode />\n      </Button>\n      <LinkButton\n        handleSubmit={() => wrapLink(editor, urlValue)}\n        handleClick={(e) => {\n          e.preventDefault();\n          if (isLinkActive(editor)) {\n            unwrapLink(editor);\n            setUrlValue('');\n          }\n          else setShowUrlInput(true);\n        }}\n        handleCloseInput={() => setShowUrlInput(false)}\n        ref={inputRef}\n        buttonClassList={classNames({ active: isLinkActive(editor) })}\n        showInput={showUrlInput}\n        value={urlValue}\n        handleChange={setUrlValue}\n      >\n        <FaLink />\n      </LinkButton>\n    </div>,\n    document.body\n  );\n};\n\nexport default InlineToolbar;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Toolbar.scss\";\n\ntype Props = {\n  /** String className or Array of String classNames to add to the component */\n  classList: string | Array<string>,\n  /** Children to be rendered inside the toolbar */\n  children: React$Element<any>\n};\n\nconst Toolbar = ({ children, classList }: Props) => (\n  <div className={classNames(classList, \"toolbar\")}>{children}</div>\n);\n\nexport default Toolbar;\n","import React, { useEffect, useRef } from 'react';\nimport { ReactEditor } from 'slate-react';\nimport { createPortal } from 'react-dom';\nimport { insertEmoji } from 'utils/slateUtils';\nimport classNames from 'classnames';\nimport './EmojiDropdown.scss';\n\nexport default ({\n  target,\n  editor,\n  search,\n  results,\n  index\n}) => {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (target && results.length > 0) {\n      const el = ref.current\n      const domRange = ReactEditor.toDOMRange(editor, target)\n      const rect = domRange.getBoundingClientRect()\n      el.style.top = `${rect.top + window.pageYOffset + 24}px`\n      el.style.left = `${rect.left + window.pageXOffset}px`\n    }\n  }, [target, ref, search, editor, results]);\n\n  return target && results.length > 0 ? createPortal((\n    <div\n      ref={ref}\n      className=\"emoji-dropdown\"\n    >\n      {results.map(([key, value], i) => (\n        <div\n          key={key}\n          className={classNames('emoji', { active: i === index })}\n          onClick={(e) => {\n            e.preventDefault();\n            insertEmoji(editor, key, target);\n          }}\n        >\n          {value.emoji} {value.description}\n        </div>\n      ))}\n    </div>\n  ), document.body) : null;\n};","import React from 'react';\nimport classNames from 'classnames';\nimport { useFocused, useSelected } from 'slate-react';\n\nconst ImageElement = ({ attributes, children, element }) => {\n  const selected = useSelected()\n  const focused = useFocused()\n  return (\n    <div className=\"image-element\" {...attributes}>\n      <div contentEditable={false}>\n        <img\n          alt=\"pic\"\n          src={element.url}\n          className={classNames(selected && focused && 'focused')}\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default ImageElement;","import React, { Attributes } from 'react';\nimport { ImageElement } from './ImageElement/';\nimport type { Element as ElementType } from 'slate';\nimport isEqual from 'react-fast-compare';\n\ntype Props = {\n  attributes: Attributes,\n  children: React$Element<any>,\n  element: ElementType\n};\n\nexport default React.memo((props: Props) => {\n  const { attributes, children, element } = props;\n  switch (element.type) {\n    case 'emoji':\n      return <span {...attributes}>{children}{element.emoji}</span>\n    case 'anchor':\n      return <a {...attributes} href={element.url}>{children}</a>;\n    case 'image':\n      return <ImageElement {...props} />;\n    case 'block-quote':\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>;\n    case 'heading-one':\n      return <h1 {...attributes}>{children}</h1>;\n    case 'heading-two':\n      return <h2 {...attributes}>{children}</h2>;\n    case 'list-item':\n      return <li {...attributes}>{children}</li>;\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>;\n    case 'code-block':\n      return <pre className=\"language-javascript\" {...attributes}><code>{children}</code></pre>\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n}, (prevProps, nextProps) => isEqual(prevProps.children, nextProps.children))\n","import React from 'react';\nimport type { Leaf as LeafType } from 'slate';\nimport isEqual from 'react-fast-compare';\n\ntype Props = {\n  attributes: Attributes,\n  children: React$Element<any>,\n  leaf: LeafType\n};\n\nconst Leaf = ({ attributes, children, leaf }: Props) => {\n  let leafChildren = children;\n  if (leaf.bold) leafChildren = <strong>{leafChildren}</strong>;\n  if (leaf.code) leafChildren = <code>{leafChildren}</code>;\n  if (leaf.italic) leafChildren = <em>{leafChildren}</em>;\n  if (leaf.underlined) leafChildren = <u>{leafChildren}</u>;\n  if (leaf.link) leafChildren = <a href={leaf.text}>{leafChildren}</a>;\n  if (leaf.token) leafChildren = <span className={`token ${leaf.token}`}>{leafChildren}</span>;\n  if (leaf.hashtag && !leaf.link)\n    leafChildren = (\n      <a href={leaf.text} className=\"text-muted\">\n        {leafChildren}\n      </a>\n    );\n  return <span {...attributes}>{leafChildren}</span>;\n};\n\nconst areEqual = (prevProps, nextProps) => isEqual(prevProps.children, nextProps.children);\n\nexport default React.memo(Leaf, areEqual);\n","import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  createEditor,\n  Text,\n  Transforms,\n  Range,\n  Node\n} from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport {\n  isBlockActive,\n  insertImage,\n  insertEmoji,\n  toggleBlock,\n  withImages,\n  withAnchors,\n  withEmojis,\n  getTokenLength,\n  getCurrentWord\n} from 'utils/slateUtils';\nimport emojis from 'utils/emojis';\nimport Prism from 'prismjs';\nimport { execAll } from 'utils';\nimport { withHistory } from 'slate-history';\nimport classNames from 'classnames';\nimport './TextEditor.scss';\nimport {\n  FaHeading,\n  FaListOl,\n  FaListUl,\n  FaCode,\n  FaQuoteRight,\n  FaFileImage\n} from 'react-icons/fa';\nimport linkifyIt from 'linkify-it';\nimport handleKeyDown from './handleKeyDown';\nimport InlineToolbar from './InlineToolbar';\nimport { HASHTAG_REGEX, BEFORE_EMOJI_REGEX } from 'utils/regex';\nimport Toolbar from './Toolbar';\nimport { Button, ImageButton } from './Button';\nimport { EmojiDropdown } from './EmojiDropdown/';\nimport { Element } from './Element';\nimport { Leaf } from './Leaf';\n\ntype Props = {\n  /** If the Editor is readOnly */\n  readOnly: Boolean,\n  /** List of CSS classes */\n  classList: string | Array<string>\n};\n\nconst linkify = linkifyIt();\nTransforms.deselect = () => { };\n\nconst SlateEditor = ({ readOnly, classList }: Props) => {\n  const editor = useMemo(\n    () => withEmojis(withAnchors(withImages(withHistory(withReact(createEditor()))))), []\n  );\n  const [target, setTarget] = useState();\n  const [emojiIndex, setEmojiIndex] = useState();\n  const [search, setSearch] = useState();\n  const results = useCallback(Object.entries(emojis).filter(([key]) => key.includes(search?.toLowerCase())).slice(0, 5), [search]);\n  const [editorValue, setEditorValue] = useState([\n    {\n      type: 'paragraph',\n      children: [{ text: '' }]\n    }\n  ]);\n  const onKeyDown = useCallback(\n    event => {\n      if (target) {\n        switch (event.key) {\n          case 'ArrowDown':\n            event.preventDefault();\n            const prevIndex = emojiIndex >= emojis.length - 1 ? 0 : emojiIndex + 1;\n            setEmojiIndex(prevIndex);\n            break;\n          case 'ArrowUp':\n            event.preventDefault();\n            const nextIndex = emojiIndex <= 0 ? emojis.length - 1 : emojiIndex - 1;\n            setEmojiIndex(nextIndex);\n            break;\n          case 'Tab':\n          case 'Enter':\n            event.preventDefault();\n            Transforms.select(editor, target);\n            insertEmoji(editor, results[emojiIndex][0]);\n            setTarget(null);\n            break;\n          case 'Escape':\n            event.preventDefault();\n            setTarget(null);\n            break;\n          default:\n            break;\n        }\n      }\n    },\n    [emojiIndex, target, editor, results]\n  );\n\n  const decorate = useCallback(([node, path]) => {\n    const ranges = [];\n    if (node.type === 'code-block') {\n      const code = Node.string(node);\n      const tokens = Prism.tokenize(code, Prism.languages.javascript);\n      let start = 0;\n\n      for (const token of tokens) {\n        const length = getTokenLength(token);\n        const end = start + length;\n        if (typeof token !== 'string') {\n          ranges.push({\n            token: token.type,\n            anchor: { path, offset: start },\n            focus: { path, offset: end }\n          });\n        }\n        start = end;\n      }\n    };\n    if (Text.isText(node)) {\n      const { text } = node;\n      if (text) {\n        (linkify.match(text) || []).forEach(({ index, lastIndex }) => {\n          ranges.push({\n            anchor: { path, offset: lastIndex },\n            focus: { path, offset: index },\n            link: true\n          });\n        });\n        execAll(text, HASHTAG_REGEX).forEach(({ index, lastIndex }) => {\n          ranges.push({\n            anchor: { path, offset: lastIndex },\n            focus: { path, offset: index },\n            hashtag: true\n          });\n        });\n      }\n    }\n    return ranges;\n  }, []);\n\n  return (\n    <Slate\n      value={editorValue}\n      onChange={(value) => {\n        const { selection } = editor;\n        setEditorValue(value);\n        if (selection && Range.isCollapsed(selection)) {\n          const [start] = Range.edges(selection);\n          const wordBefore = getCurrentWord(editor, start);\n          const emojiMatch = BEFORE_EMOJI_REGEX.exec(wordBefore.text);\n          if (emojiMatch) {\n            setSearch(emojiMatch[1]);\n            setTarget(wordBefore.range);\n            setEmojiIndex(0);\n            return;\n          }\n        }\n        setTarget(null);\n      }}\n      editor={editor}\n    >\n      <EmojiDropdown\n        target={target}\n        editor={editor}\n        results={results}\n        search={search}\n        index={emojiIndex}\n      />\n      <InlineToolbar />\n      <Toolbar>\n        <Button\n          onClick={(event) => {\n            event.preventDefault();\n            toggleBlock(editor, \"heading-one\");\n          }}\n          classList={classNames('btn-link', {\n            active: isBlockActive(editor, \"heading-one\")\n          })}\n        >\n          <FaHeading />\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.preventDefault();\n            toggleBlock(editor, \"heading-two\");\n          }}\n          classList={classNames('btn-link', {\n            active: isBlockActive(editor, \"heading-two\")\n          })}\n        >\n          <FaHeading /><sub>2</sub>\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.preventDefault();\n            toggleBlock(editor, \"code-block\");\n          }}\n          classList={classNames('btn-link', {\n            active: isBlockActive(editor, \"code-block\")\n          })}\n        >\n          <FaCode />\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.preventDefault();\n            toggleBlock(editor, \"block-quote\");\n          }}\n          classList={classNames('btn-link', {\n            active: isBlockActive(editor, \"block-quote\")\n          })}\n        >\n          <FaQuoteRight />\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.preventDefault();\n            toggleBlock(editor, \"numbered-list\");\n          }}\n          classList={classNames('btn-link', {\n            active: isBlockActive(editor, \"numbered-list\")\n          })}\n        >\n          <FaListOl />\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.preventDefault();\n            toggleBlock(editor, \"bulleted-list\");\n          }}\n          classList={classNames('btn-link', {\n            active: isBlockActive(editor, \"bulleted-list\")\n          })}\n        >\n          <FaListUl />\n        </Button>\n        <ImageButton handleSubmit={(value) => insertImage(editor, value)}><FaFileImage /></ImageButton>\n      </Toolbar>\n      <Editable\n        placeholder=\"Well, hello there!\"\n        renderElement={(props) => <Element {...props} />}\n        renderLeaf={(props) => <Leaf {...props} />}\n        autoFocus\n        decorate={decorate}\n        onKeyDown={(event) => {\n          onKeyDown(event);\n          handleKeyDown(event, editor);\n        }}\n      />\n    </Slate>\n  );\n};\n\nexport default SlateEditor;\n","import { HOTKEYS, isBlockActive, toggleMark } from 'utils/slateUtils';\nimport isHotkey from 'is-hotkey';\n\nexport default function handleKeyDown(event, editor) {\n  Object.entries(HOTKEYS).forEach(([hotkey, mark]) => {\n    if (isHotkey(hotkey, event)) {\n      event.preventDefault();\n      toggleMark(editor, mark);\n    }   \n  });\n  if (event.key === 'Enter' && event.shiftKey) {\n    event.preventDefault();\n    editor.insertText('\\n');\n  }\n  if (event.key === 'Tab' && isBlockActive(editor, 'code-block')) {\n    event.preventDefault();\n    editor.insertText('\\t');\n  }\n}","import { convertToRaw } from 'draft-js';\n\nexport const wsConnect = (host) => ({ type: 'WS_CONNECT', host });\nexport const wsConnecting = (host) => ({ type: 'WS_CONNECTING', host });\nexport const wsConnected = (host) => ({ type: 'WS_CONNECTED', host });\nexport const wsDisconnect = (host) => ({ type: 'WS_DISCONNECT', host });\nexport const wsDisconnected = (host) => ({ type: 'WS_DISCONNECTED', host });\nexport const newMessage = (text) => ({\n  type: 'NEW_MESSAGE',\n  payload: text\n});\n\nexport const setEditorStateSuccess = (editorState) => ({\n  type: 'SET_EDITOR_STATE',\n  payload: editorState\n});\n\nexport const setEditorState = (editorState) => (dispatch, getState) => {\n  const currentContent = getState().editorReducer.getCurrentContent();\n  const newContent = editorState.getCurrentContent();\n\n  if (!newContent.equals(currentContent)) {\n    dispatch(newMessage(convertToRaw(newContent)));\n  }\n  dispatch(setEditorStateSuccess(editorState));\n};\n\nexport const setEditorText = (text) => ({\n  type: 'SET_EDITOR_TEXT',\n  payload: text\n});\n","import Prism from 'prismjs';\nimport createPrismPlugin from 'draft-js-prism-plugin';\nimport './prism.css';\n\nconst plugins = [\n  createPrismPlugin({\n    prism: Prism\n  })\n];\n\nexport default plugins;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Toolbar.scss';\n\ntype Props = {\n  /** String className or Array of String classNames to add to the component */\n  classList: string | Array<string>,\n  /** Children to be rendered inside the toolbar */\n  children: React$Element<any>\n};\n\nconst Toolbar = ({ children, classList }: Props) => (\n  <div className={classNames(classList, 'static-toolbar position-relative')}>\n    {children}\n  </div>\n);\n\nexport default Toolbar;\n","import React from 'react';\nimport { HASHTAG_REGEX } from 'utils/regex';\nimport linkifyIt from 'linkify-it';\n\nconst linkify = linkifyIt();\n\nfunction findWithRegex(regex, contentBlock, callback) {\n  const text = contentBlock.getText();\n  let matchArr;\n  let start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n\nconst linkStrategy = (contentBlock: Object, callback: Function) => {\n  const links = linkify.match(contentBlock.getText());\n  if (typeof links !== 'undefined' && links !== null) {\n    links.forEach((link) => callback(link.index, link.lastIndex));\n  }\n};\n\nconst LinkComponent = ({ children }, props) => (\n  <a {...props} className=\"link\" href={children}>\n    {children}\n  </a>\n);\n\nfunction hashtagStrategy(block, callback, state) {\n  findWithRegex(HASHTAG_REGEX, block, callback);\n}\n\nconst HashtagComponent = ({ children }, props) => (\n  <span {...props} className=\"hashtag text-muted\">\n    {children}\n  </span>\n);\n\nconst decorator = [\n  {\n    strategy: linkStrategy,\n    component: LinkComponent\n  },\n  {\n    strategy: hashtagStrategy,\n    component: HashtagComponent\n  }\n];\n\nexport default decorator;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './StyleButton.scss';\n\nconst StyleButton = ({ \n  active, \n  onToggle, \n  style,\n  label \n}) => {\n  const toggleActive = (e) => {\n    e.preventDefault();\n    onToggle(style);\n  };\n\n  return (\n    <button \n    className={classNames(\"btn btn-link style-button\", { 'btn-active': active })} \n    onMouseDown={toggleActive}>\n      {label}\n    </button>\n  );\n};\nexport default StyleButton;","import React from 'react';\nimport classNames from 'classnames';\nimport type { EditorState } from 'draft-js';\nimport {\n  FaHeading,\n  FaListOl,\n  FaListUl,\n  FaCode,\n  FaQuoteRight\n} from 'react-icons/fa';\nimport StyleButton from './StyleButton';\n\ntype Props = {\n  /** DraftJS editor state */\n  editorState: EditorState,\n  /** Function to be called on toggle */\n  onToggle: Function,\n  /** Array or string with CSS classes */\n  classList: Array<string> | string\n};\n\nconst BLOCK_TYPES = [\n  {\n    label: (\n      <>\n        <FaHeading />\n        <strong>\n          <sub>1</sub>\n        </strong>\n      </>\n    ),\n    style: 'header-one'\n  },\n  {\n    label: (\n      <>\n        <FaHeading />\n        <strong>\n          <sub>2</sub>\n        </strong>\n      </>\n    ),\n    style: 'header-two'\n  },\n  {\n    label: (\n      <>\n        <FaHeading />\n        <strong>\n          <sub>3</sub>\n        </strong>\n      </>\n    ),\n    style: 'header-three'\n  },\n  {\n    label: (\n      <>\n        <FaHeading />\n        <strong>\n          <sub>4</sub>\n        </strong>\n      </>\n    ),\n    style: 'header-four'\n  },\n  { label: <FaQuoteRight />, style: 'blockquote' },\n  { label: <FaListUl />, style: 'unordered-list-item' },\n  { label: <FaListOl />, style: 'ordered-list-item' },\n  { label: <FaCode />, style: 'code-block' }\n];\n\nconst BlockStyleControls = ({ editorState, onToggle, classList }: Props) => {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className={classNames(classList)}>\n      {BLOCK_TYPES.map((type) => (\n        <StyleButton\n          key={type.style}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default BlockStyleControls;\n","// @flow\n\nimport React from 'react';\nimport type { EditorState } from 'draft-js';\nimport { FaBold, FaItalic, FaUnderline, FaCode } from 'react-icons/fa';\nimport StyleButton from './StyleButton';\n\ntype Props = {\n  /** DraftJS editor state */\n  editorState: EditorState,\n  /** Function to be called on toggle */\n  onToggle: Function,\n  /** Array or string with CSS classes */\n  classList: Array<string> | string\n};\n\nconst INLINE_STYLES = [\n  { label: <FaBold />, style: 'BOLD' },\n  { label: <FaItalic />, style: 'ITALIC' },\n  { label: <FaUnderline />, style: 'UNDERLINE' },\n  { label: <FaCode />, style: 'CODE' }\n];\n\nconst InlineStyleControls = ({ editorState, onToggle, classList }: Props) => {\n  const currentStyle = editorState.getCurrentInlineStyle();\n  return (\n    <>\n      {INLINE_STYLES.map((type, index) => (\n        <StyleButton\n          active={currentStyle.has(type.style)}\n          key={type.style}\n          label={type.label}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default InlineStyleControls;\n","import React, { useEffect, useRef } from 'react';\nimport {\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  Modifier,\n  convertToRaw\n} from 'draft-js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { wsConnect, setEditorState } from 'actions';\nimport Editor from 'draft-js-plugins-editor';\nimport createInlineToolbarPlugin from 'draft-js-inline-toolbar-plugin';\nimport classNames from 'classnames';\nimport createLinkPlugin from 'draft-js-anchor-plugin';\nimport plugins from './plugins';\nimport Toolbar from './Toolbar';\nimport decorators from './decorator';\nimport BlockStyleControls from './StyleControls/BlockStyleControls';\nimport InlineStyleControls from './StyleControls/InlineStyleControls';\nimport 'draft-js-inline-toolbar-plugin/lib/plugin.css';\nimport toolbarStyles from './toolbarStyles.module.scss';\nimport './Editor.scss';\n\ntype Props = {\n  classList: Array<string> | string,\n  readOnly: Boolean\n};\n\nconst linkPlugin = createLinkPlugin({\n  placeholder: 'Enter an URL...'\n});\nconst { LinkButton } = linkPlugin;\n\nconst inlineToolbarPlugin = createInlineToolbarPlugin({\n  theme: { toolbarStyles }\n});\nconst { InlineToolbar } = inlineToolbarPlugin;\n\nconst DraftEditor = ({ readOnly, classList }: Props) => {\n  const editorState = useSelector((state) => state.editorReducer);\n  const dispatch = useDispatch();\n  const editorRef = useRef();\n\n  const getBlockStyle = (block) => {\n    switch (block.getType()) {\n      case 'code-block':\n        return 'language-javascript';\n      default:\n        return null;\n    }\n  };\n\n  const toggleInlineStyle = (style) => {\n    dispatch(setEditorState(RichUtils.toggleInlineStyle(editorState, style)));\n  };\n\n  useEffect(() => {\n    dispatch(wsConnect('/'));\n  }, [dispatch]);\n\n  const keyBinding = (e) => {\n    if (e.keyCode === 13 && e.shiftKey) return 'soft-break';\n    const selection = editorState.getSelection();\n    const block = editorState\n      .getCurrentContent()\n      .getBlockForKey(selection.getStartKey());\n    if (e.key === 'Tab' && block.getType() === 'code-block') return 'code-tab';\n    return getDefaultKeyBinding(e);\n  };\n\n  const handleKeyCommand = (command, state) => {\n    const newState = RichUtils.handleKeyCommand(state, command);\n    if (command === 'code-block') {\n      dispatch(setEditorState(RichUtils.toggleBlockType(state, 'code-block')));\n      return 'handled';\n    }\n    if (command === 'soft-break') {\n      dispatch(setEditorState(RichUtils.insertSoftNewline(editorState)));\n      return 'handled';\n    }\n    if (command === 'code-tab') {\n      const currentState = editorState;\n      const newBlockState = Modifier.replaceText(\n        currentState.getCurrentContent(),\n        currentState.getSelection(),\n        '\\t'\n      );\n\n      dispatch(\n        setEditorState(\n          EditorState.push(currentState, newBlockState, 'insert-characters')\n        )\n      );\n    }\n    if (newState) {\n      dispatch(setEditorState(newState));\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const toggleBlockType = (type) => {\n    dispatch(setEditorState(RichUtils.toggleBlockType(editorState, type)));\n  };\n\n  const handleChange = (newEditorState) => {\n    const selection = newEditorState.getSelection();\n    const block = newEditorState\n      .getCurrentContent()\n      .getBlockForKey(selection.getStartKey());\n    const currentContent = editorState.getCurrentContent();\n    const newContent = newEditorState.getCurrentContent();\n    if (\n      block.getType() === 'code-block' &&\n      !newContent.equals(currentContent)\n    ) {\n      const data = block.getData().merge({ language: 'javascript' });\n      const newBlock = block.merge({ data });\n      const newContentState = newEditorState.getCurrentContent().merge({\n        blockMap: newEditorState\n          .getCurrentContent()\n          .getBlockMap()\n          .set(selection.getStartKey(), newBlock),\n        selectionAfter: selection\n      });\n      dispatch(\n        setEditorState(\n          EditorState.push(newEditorState, newContentState, 'change-block-data')\n        )\n      );\n    } else dispatch(setEditorState(newEditorState));\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className={classNames('editor', classList)}\n      onClick={() => editorRef.current.focus()}\n      role=\"textbox\"\n      onKeyDown={() => {}}\n    >\n      {!readOnly && (\n        <Toolbar>\n          <BlockStyleControls\n            editorState={editorState}\n            onToggle={toggleBlockType}\n          />\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              console.log(convertToRaw(editorState.getCurrentContent()));\n            }}\n          >\n            Convert to Raw JS\n          </button>\n        </Toolbar>\n      )}\n      <Editor\n        editorState={editorState}\n        plugins={[...plugins, inlineToolbarPlugin, linkPlugin]}\n        ref={editorRef}\n        readOnly={readOnly}\n        decorators={decorators}\n        onChange={handleChange}\n        keyBindingFn={keyBinding}\n        blockStyleFn={getBlockStyle}\n        handleKeyCommand={handleKeyCommand}\n      />\n      {!readOnly && (\n        <InlineToolbar>\n          {(externalProps) => (\n            <div className=\"inline-toolbar-draft d-flex flex-nowrap\">\n              <InlineStyleControls\n                editorState={editorState}\n                onToggle={toggleInlineStyle}\n                {...externalProps}\n              />\n              <LinkButton\n                {...externalProps}\n                theme={{\n                  button: 'btn btn-link style-button',\n                  active: 'btn-active'\n                }}\n              />\n            </div>\n          )}\n        </InlineToolbar>\n      )}\n    </div>\n  );\n};\n\nexport default DraftEditor;\n","import { EditorState } from 'draft-js';\n\nconst initialState = EditorState.createEmpty();\n\nexport const editorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_EDITOR_STATE':\n      return action.payload;\n    case 'SET_EDITOR_TEXT':\n      return EditorState.createWithContent(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default editorReducer;\n","import * as actions from 'actions';\nimport { convertFromRaw } from 'draft-js';\nimport socketIOClient from 'socket.io-client';\n\nconst socketMiddleware = () => {\n  let socket = null;\n  return (store) => (next) => (action) => {\n    switch (action.type) {\n      case 'WS_CONNECT':\n        if (socket !== null) socket.close();\n        socket = socketIOClient(action.host);\n\n        // handlers\n        socket.on('message', (data) => {\n          store.dispatch(\n            actions.setEditorText(convertFromRaw(JSON.parse(data).message))\n          );\n        });\n\n        break;\n      case 'WS_DISCONNECT':\n        if (socket !== null) socket.close();\n        socket = null;\n        console.log('WebSocket closed');\n        break;\n      case 'NEW_MESSAGE':\n        if (socket) {\n          socket.send(\n            JSON.stringify({ command: 'NEW_MESSAGE', message: action.payload })\n          );\n        }\n\n        break;\n      default:\n        return next(action);\n    }\n  };\n};\n\nexport default socketMiddleware;\n","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/scss/bootstrap.scss';\nimport { HashRouter, Switch, Route, Redirect, NavLink } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { SwitchButton } from 'SwitchButton';\nimport { Editor as SlateEditor } from 'SlateEditor';\nimport { Editor as DraftEditor } from 'DraftEditor';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nconst App = () => {\n  const [readOnly, setReadOnly] = useState(false);\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/draft\">\n                Draft\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/slate\">\n                Slate\n              </NavLink>\n            </li>\n          </div>\n        </nav>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/slate\" component={SlateEditor} />\n            <Route path=\"/draft\">\n              <>\n                <div className='d-flex mb-3 align-items-center'>\n                  <SwitchButton \n                    onToggle={() => setReadOnly(true)}\n                    onUntoggle={() => setReadOnly(false)}\n                    \n                  />\n                  <small className=\"ml-2\">{readOnly ? 'Read only' : 'Read and edit'}</small>\n                </div>\n                <DraftEditor readOnly={readOnly} />\n              </>\n            </Route>\n            <Route exact path=\"/\">\n              <Redirect to=\"/draft\" />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { editorReducer } from 'reducers/editorReducer';\nimport thunk from 'redux-thunk';\nimport socketMiddleware from 'middleware/socketMiddleware';\n\nexport default function configureStore(initialState = {}) {\n  const composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose;\n\n  const enhancer = composeEnhancers(applyMiddleware(socketMiddleware(), thunk));\n\n  return createStore(combineReducers({ editorReducer }), enhancer);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}